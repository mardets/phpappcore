<?php

	require('encoder.php');
	
	class Util {
	
		public static function getDb() {
			$db = new Dbconfig();

			$db->setPassword("");
			$db->setUsername("root");
			$db->setHostname("localhost");
			$db->setDbname("together");
			$db->setPort("3308");
			
			echo "db exist";
			Dbconfig::getConnection('mysql', $db);
			return $db;
		}	
		
		public static function insert_node_asc($obj, $array) {
				echo "/n";echo "/n";
				echo "Representation du nouvel objet";
				echo "/n";
				echo "*********************************/n/n";
				echo "/n";
				var_dump($obj);
				if($obj['dsign'] !== '') {
					//query to get parent object
					
					$parent_node =  Controller::findOne(Util::getDb()->getDbserver(), 'usernode', 'osign', $obj['dsign']);
					echo "PARENT FOUNDED SUCESSFULLY";echo"/n"	;	
					var_dump(json_decode($obj['relations'], true));	
					var_dump(json_decode($parent_node['relations'], true));
					var_dump($parent_node);		
					var_dump($obj);
					$result_array = array();
					if(count($array) === 0) {
						echo "PREMIER AFFICHAGE OBJECT /n";echo "/n";echo "/n";
						$p_relations = $parent_node['relations'];
						//$array_ = json_decode($parent_node['relations'], true);
						//$array = $parent_node['relations'];
						var_dump($p_relations);
						$array_ = array();
						array_push($array_, $p_relations);
						echo "THE NEW JSON OBJECT";
						var_dump($array_);
						echo "PARENT NODE ID";
						var_dump($parent_node['nid']);
						echo "/n";echo "Relations";echo "/n";
						var_dump($obj['relations']);
						array_push($array_, json_decode($obj['relations'], true)[0]);
						$result_array = $array_;
						echo "/n";echo "NEW Relations";echo "/n";
						var_dump($result_array);
					} else {
						echo "Tableau du parent /n";
						var_dump($parent_node);
						$val = $parent_node['relations'];
						echo "Ma valeur val /n"; echo"/n"; echo"/n";
						var_dump($val);
						echo "Mon tableau array /n"; echo"/n"; echo"/n";
						var_dump($result_array);						
						array_push($result_array, $val);
						echo "Mon NOUVEAU TABLEAU APRES 1ST PUSH ";  echo"/n"; echo"/n";
						var_dump($result_array);	
						$array_merge = json_decode($result_array[0], true);	
						foreach($array as $key => $value) {
							if(in_array($value, $array_merge)) {
								array_push($array_merge, $value);
							}				
						}
						//array_push($array_merge, $result_array[0]);
						echo "Mon NOUVEAU TABLEAU APRES MERGING";  echo"/n"; echo"/n";
						$result_array = $array_merge;
						var_dump($result_array);
					}
					
					//array_merge($result_array, $array);
					$date = new DateTime();
					echo "THE NEW PARENT NODE VALUES";
					$parent_node['relations'] = json_encode($result_array);
					$parent_node['created'] = $date-> format('Y-m-d H:i:s');
					$parent_node['edited'] = $date-> format('Y-m-d H:i:s');
					echo "Parent _node json format /n";
					var_dump($parent_node['relations']);
					var_dump(json_encode($result_array));
					echo "BEFORE THE QUERY UPDATING";
					Controller::update(Util::getDb(), 'usernode', 'nid', $parent_node['nid'], $parent_node); 
					echo "THE QUERY RESULLT";
					//var_dump($edit);
					Util::insert_node_asc($parent_node, $result_array);
					
					
				}
				//print_r($array, $return = $array);

		} 
		
		public static function redirect($path) {
			
			header('Location: $path', true, $permanent ? 301 : 302);
			exit;
		}
		
				
		public static function evalUrl($url) {
			return strcmp(strstr($url, '?'), '?lang=en') !== 0 ? i18n::en() : i18n::fr();
		}
			
	}

?>
